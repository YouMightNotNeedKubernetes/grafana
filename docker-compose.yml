x-deploy-policy: &x-deploy-policy
  replicas: 1
  update_config:
    parallelism: 1
    delay: 30s
    order: stop-first
    failure_action: rollback
  rollback_config:
    parallelism: 1
    delay: 30s
  restart_policy:
    condition: on-failure
    delay: 30s
    max_attempts: 3
    window: 120s

x-default-logging: &x-default-logging
  options:
    max-size: "12m"
    max-file: "5"
  driver: json-file

configs:
  grafana.ini:
    name: grafana-v1.0.ini
    file: configs/grafana.ini
  litestream.yml:
    name: litestream-v1.0.yml
    file: configs/litestream.yml

services:
  grafana-init:
    image: litestream/litestream
    entrypoint: ["/bin/sh", "-c"]
    command: ["/usr/local/bin/litestream restore -v -if-db-not-exists -if-replica-exists $${GF_PATHS_DATA}/grafana.db"]
    env_file: .env
    volumes:
      - grafana:/var/lib/grafana
    configs:
      - source: litestream.yml
        target: /etc/litestream.yml
    deploy:
      mode: replicated-job
    logging: *x-default-logging

  grafana-server:
    image: grafana/grafana:10.1.2
    user: root
    entrypoint: ["/bin/sh", "-c"]
    command: ["sleep 60; /run.sh"]
    env_file: .env
    networks:
      - dockerswarm_monitoring
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana
    configs:
      - source: grafana.ini
        target: /etc/grafana/grafana.ini
    depends_on:
      - grafana-init
    deploy: *x-deploy-policy
    logging: *x-default-logging

  grafana-replicate:
    image: litestream/litestream
    entrypoint: ["/bin/sh", "-c"]
    command: ["sleep 30; /usr/local/bin/litestream replicate"]
    env_file: .env
    volumes:
      - grafana:/var/lib/grafana
    configs:
      - source: litestream.yml
        target: /etc/litestream.yml
    depends_on:
      - grafana-init
    deploy: *x-deploy-policy
    logging: *x-default-logging

volumes:
  grafana:

networks:
  dockerswarm_monitoring:
    name: dockerswarm_monitoring
    external: true
